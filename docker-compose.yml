# docker-compose.yml - Use this for production deployment.
# It pulls pre-built images from Docker Hub.

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: tex2sql
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mssql:
    image: mcr.microsoft.com/azure-sql-edge:latest
    environment:
      - ACCEPT_EULA=1
      - MSSQL_SA_PASSWORD=l.messi10
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
      - ./backend/scripts/create_test_db.sql:/docker-entrypoint-initdb.d/create_test_db.sql

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile

    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/tex2sql
    volumes:
      - ./backend/data:/app/data
      - ./backend/uploads:/app/uploads
      - ./chromadb_model:/root/.cache/chroma/onnx_models/all-MiniLM-L6-v2/onnx
    ports:
      - "6020:6020"
    depends_on:
      postgres:
        condition: service_healthy
    command: python /app/patch-cors.py  # Override the command

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile

    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:6020
    command: |
      sh -c "
      sed -i 's|http://localhost:6020|http://localhost:6020|g' /usr/share/nginx/html/static/js/*.js
      exec nginx -g 'daemon off;'
      "

volumes:
  postgres_data:
  mssql_data:
